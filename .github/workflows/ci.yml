name: CI Workflow

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]


jobs:
  lint-and-test-backend:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest
          if [ -f backend/requirements.txt ]; then
            pip install -r backend/requirements.txt
          fi

      - name: Lint with flake8
        run: |
          # Pythonコードの文法チェックと品質チェック
          flake8 backend/ --count --select=E9,F63,F7,F82 --show-source --statistics
          # 警告を表示するが失敗はさせない
          flake8 backend/ --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      - name: Test with pytest
        run: |
          pytest backend/tests/

  lint-and-test-frontend:
    runs-on: ubuntu-latest

    steps:
      - name: Check code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install dependencies
        run: |
          cd frontend
          npm ci

      - name: Install ESLint
        run: |
          cd frontend
          npm install --save-dev @angular-eslint/schematics
          npx ng add @angular-eslint/schematics --skip-confirmation

      - name: Lint Angular code
        run: |
          cd frontend
          npx ng lint

      - name: Run frontend tests
        run: |
          cd frontend
          npx ng test --watch=false --browsers=ChromeHeadlessNoSandbox

  build-and-test-docker:
    runs-on: ubuntu-latest
    needs: [lint-and-test-backend, lint-and-test-frontend]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and test backend Docker image
        run: |
          docker build -t twitter-backend -f backend/Dockerfile .
          # 簡単なヘルスチェック
          docker run --name test-backend -d -p 5001:5000 twitter-backend
          sleep 10
          curl --fail http://localhost:5000/ || exit 1
      
      - name: Build frontend Docker image
        run: |
          docker build -t twitter-frontend -f frontend/Dockerfile .
      
      - name: Build nginx Docker image
        run: |
          docker build -t twitter-nginx -f nginx/Dockerfile .
      
      - name: Test docker-compose build
        run: |
          docker-compose build
